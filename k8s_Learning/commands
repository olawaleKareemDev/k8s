# get nodes and pods
kubectl get nodes
kubectl get pods -A 
kubectl get pods -w
kubectl get pods -A -owide  #all system pods with more info
kubectl get pods -owide     # namespace pods with more info
kubectl get pods 
kubectl run demo --image=nginx --dry-run=client -oyaml


# name spaces

kubectl get namespace or kubectl get ns
kubectl get pods -n <namespace>

kubectl get cm -n kube-public
kubectl cluster-info  

kubectl get lease -n kube-node-lease

# create namespace
kubectl create ns dev
kubectl create ns testing

# get sample yml for declarative approach to creating ns
kubectl create ns  demo  --dry-run=client -oyaml

# create deployment in namespaces
kubectl create deploy olawale --image=nginx
kubectl create deploy olawale --image=nginx -n dev
kubectl create deploy olawale --image=nginx -n testing

# describe namespace
kubectl describe ns dev
kubectl describe ns testing

# delete namespaces
kubectl delete ns dev
kubectl delete ns testing

# switch kebuctl context
kubectl config set-context --current --namespace=dev
  

# Labels and selectors

kubectl get pods --show-labels

kubectl run demo  --image=nginx

# show pod details with label
kubectl get pods --show-labels
# add more lables
kubectl label pod demo run2=nginx



#pods

kubectl run demo --image=nginx
kubectl describe pod demo
kubectl logs -f demo   # check pod logs

kubectl exec -it nginx bash  # access pod shell
kubectl exec -it nginx -- sh

kubectl delete pod nginx
kubectl delete pod nginx --force #forceful deletion


# satarting init container declaratively
kubectl apply -f <file-name>

# excercise 2 steps
vi init
paste excercise 1 content inside
kubectl apply -f init
kubectl exec -it init -- sh
cat /usr/share/nginx/html/index.html 
curl localhost


# check the logs of a multi container pod
kubectl logs -f <pod name> -c <container name>


# show CPU and memory for a pod
kubectl top pods
kubectl top nodes


# create deployments

kubectl create deploy nginx-demo --image=nginx
kubectl create deploy nginx-demo-1 --image=nginx
kubectl get rs
kubectl get pods

# scale deploy 
kubectl scale deploy nginx-demo --replicas 5
kubectl scale deploy nginx-demo-1 --replicas 5

# edit deploy
kubectl edit deploy nginx-demo
kubectl edit deploy nginx-demo-1

# change deploy image
kubectl set image deployment/nginx-demo nginx=nginx:1.15.2 --record
kubectl describe deploy nginx-demo

# deployment roll out status, history
kubectl rollout status deploy nginx-demo
kubectl rollout history deploy nginx-demo

# roll back deployment
kubectl rollout history deploy nginx-demo
kubectl rollout undo deployment nginx-demo --to-revision 3 # the number 3 is the revision number to roll to goten from history

# delete deployment
kubectl delete deploy nginx-demo-1 --force



# services

kubectl run nginx --image=nginx
kubectl expose pod nginx --port 80
kubectl get svc
kubectl get ep
kubectl get pods -owide

# some delete commands
kubectl delete statefulset --all --force
kubectl delete pods --all --force


# authentication
kubectl config view # get cluster information

# another way to create pod declaratively on the k8 shell

cat << EOF | kubectlapply -f -  #press enter and paste your code in
EOF # add at the end of the line